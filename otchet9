Работа с pipe. Часть 1

Для работы с pipe можно воспользоваться системными вызовами write() для записи и read() для чтения, как это делалось для записи в файл и чтения из файла. Разилчие в том, что пр чтении из файла информация не исчезает, а юайт, прочитанный из pipe удаляется
Для создания pipe используется системный вызов pipe(), которому в качестве параметра должен быть передан массив из двух целых чисел. Элемент массива с индексом 0 используется как файловый дискриптор для чтения, а элемент с индексом 1 используется для записи.
Пример:
int fd[2];
pipe(fd);

Таблица файловых дискрипторов наследуется дочерним процессом от родительского, поэтому процесс-ребенок моежт отправлять информацию через pipe любому из своих предков, так же, как и читать информацию, отправленную ими в pipe.
Pipe существует до тех пор, пока хотя бы один из его предков не закрыт. Для этого нужно, чтобы каждый родственный процесс завершил работу, или в процессе работы явно закрыл входной и выходной потоки.
