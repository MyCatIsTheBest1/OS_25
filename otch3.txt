Процессы в ОС GNU/Linux 
Каждый процесс имеет свой собственный идентификатор
Получить значение идентификатора процесса можно получить при помощи системного вызова getpid()
Идентификатор родительского процесса возвращается системным вызовом getppid()

Программа, выводящая на экран идентификаторы текущего и родительского процессов:
#include <stdio.h>
#include <sys/types.h>
#include <unistd.h>
#include <stdlib.h>
int main() {
        pid_t prid, parentprid;
        prid = getpid();
        parentprid = getppid();
        printf("Ид. текущего процесса: %d\nИд. родительского процесса: %d\n", prid, parentprid);
        return 0;
}


skachkov@alexandr-Aspire-Z5751:~/OS_25$ ps
    PID TTY          TIME CMD
  13666 pts/10   00:00:00 bash
  13758 pts/10   00:00:00 ps
skachkov@alexandr-Aspire-Z5751:~/OS_25$ vim pr003.c
skachkov@alexandr-Aspire-Z5751:~/OS_25$ skachkov@alexandr-Aspire-Z5751:~/OS_25$ gcc pr003.c -o pr003.out

Родительским процессом для запущенной программы является командная оболочка bash, поэтому ее id совпадает с id родительского процесса
skachkov@alexandr-Aspire-Z5751:~/OS_25$ ./pr003.out
Ид. текущего процесса: 14446
Ид. родительского процесса: 13666

После второго запуска программы меняется id текущего процесса, так как предыдущий процесс уже завершился
skachkov@alexandr-Aspire-Z5751:~/OS_25$ ./pr003.out
Ид. текущего процесса: 14491
Ид. родительского процесса: 13666
skachkov@alexandr-Aspire-Z5751:~/OS_25$ ./pr003.out
Ид. текущего процесса: 14492
Ид. родительского процесса: 13666
